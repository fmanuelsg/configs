==Personal configurations==

This repository contains configurations of several of the tools that I use, and
that I try to share and have in sync with different machines. Sharing your
configurations (specially your vimrc file) on a public Git repository is quite
common, but I finally dared to do it thanks to a great Vim and Git promoter,
[http://drewneil.com/ Drew Neil], who made a great
[http://vimcasts.org/episodes/synchronizing-plugins-with-git-submodules-and-pathogen/ 
screencast on keeping in sync your Vim configuration with Git and Github].

==Usage notes==

===Set up in a new machine===

Get the files and set the symbolic links:

*git clone git@github.com:suy/configs.git
*git submodule update --init
*ln -s configs/vimrc .vimrc
*ln -s configs/dotvim .vim
*ln -s configs/bashrc .bashrc
*ln -s configs/screenrc .screenrc
*ln -s configs/inputrc .inputrc

Etc.

===Get updates from the depot===

*git pull
*git submodule update --init --merge

===Update from upstream repositories===

*git submodule foreach git pull
*git add dotvim/bundle && git commit

You maybe want to be safe, and do git fetch instead of git pull. Then check the
changes using something like git log master..origin/master.

===Switch to your fork of a plugin===

If you want to provide a patch for a plugin that you are using, and you want to
use that patch right away, you might need to switch the URL of the repository to
the one of your fork. You will have to add your remote to the repository, create
the branch, do the fix, commit and push to a public place. Now you will have to
update the .gitmodules file (since now your commit is in a different URL), and
do git submodule sync to make the .git/config file in sync with .gitmodules.
When you receive updates with git pull, you might need to do also a git
submodule sync before the update, or otherwise it will be impossible for Git to
find the commit in the old repository.

==To do==

I still have much to learn, and there is still too much that isn't exactly like
I want it to be. Lately I've been using Vim a lot, so I have many things to
tweak in my vimrc. Here are some notes for self reference:

* Use syntastic properly: learn more about the specific syntax checkers.
* Tweak viminfo and swapfile configuration.
* Reorder and reorganize.
* Test plugins from [https://github.com/kana Kana Natsuno]. He has great things there.
* Add (and learn) stuff for nice C++ completion and refactoring (e.g. neocomplcache).

